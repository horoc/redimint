// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_serivce.proto

package rpc_serivce

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandRequest struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRequest) Reset()         { *m = CommandRequest{} }
func (m *CommandRequest) String() string { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()    {}
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8020700a4ab37802, []int{0}
}

func (m *CommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRequest.Unmarshal(m, b)
}
func (m *CommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRequest.Marshal(b, m, deterministic)
}
func (m *CommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRequest.Merge(m, src)
}
func (m *CommandRequest) XXX_Size() int {
	return xxx_messageInfo_CommandRequest.Size(m)
}
func (m *CommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRequest proto.InternalMessageInfo

func (m *CommandRequest) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type QueryResponse struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	CodeMsg              string   `protobuf:"bytes,2,opt,name=CodeMsg,proto3" json:"CodeMsg,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8020700a4ab37802, []int{1}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryResponse) GetCodeMsg() string {
	if m != nil {
		return m.CodeMsg
	}
	return ""
}

func (m *QueryResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*CommandRequest)(nil), "CommandRequest")
	proto.RegisterType((*QueryResponse)(nil), "QueryResponse")
}

func init() { proto.RegisterFile("rpc_serivce.proto", fileDescriptor_8020700a4ab37802) }

var fileDescriptor_8020700a4ab37802 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2a, 0x48, 0x8e,
	0x2f, 0x4e, 0x2d, 0xca, 0x2c, 0x4b, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe2,
	0xe2, 0x73, 0xce, 0xcf, 0xcd, 0x4d, 0xcc, 0x4b, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11,
	0x12, 0xe0, 0x62, 0x4e, 0xce, 0x4d, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95,
	0x42, 0xb9, 0x78, 0x03, 0x4b, 0x53, 0x8b, 0x2a, 0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53,
	0x85, 0x84, 0xb8, 0x58, 0x9c, 0xf3, 0x53, 0x52, 0xc1, 0x6a, 0x78, 0x83, 0xc0, 0x6c, 0x21, 0x09,
	0x2e, 0x76, 0x10, 0xed, 0x5b, 0x9c, 0x2e, 0xc1, 0x04, 0xd6, 0x0a, 0xe3, 0x0a, 0x89, 0x71, 0xb1,
	0x05, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x48, 0x30, 0x83, 0x25, 0xa0, 0x3c, 0x23, 0x33, 0x2e, 0x8e,
	0xa2, 0xd4, 0x94, 0xcc, 0xdc, 0xcc, 0xbc, 0x12, 0x21, 0x2d, 0x2e, 0x56, 0xb0, 0x15, 0x42, 0xfc,
	0x7a, 0xa8, 0xce, 0x91, 0xe2, 0xd3, 0x43, 0xb1, 0x5b, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x72, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x82, 0x58, 0x2a, 0xce, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RedimintClient is the client API for Redimint service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RedimintClient interface {
	Query(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*QueryResponse, error)
}

type redimintClient struct {
	cc *grpc.ClientConn
}

func NewRedimintClient(cc *grpc.ClientConn) RedimintClient {
	return &redimintClient{cc}
}

func (c *redimintClient) Query(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/redimint/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RedimintServer is the server API for Redimint service.
type RedimintServer interface {
	Query(context.Context, *CommandRequest) (*QueryResponse, error)
}

// UnimplementedRedimintServer can be embedded to have forward compatible implementations.
type UnimplementedRedimintServer struct {
}

func (*UnimplementedRedimintServer) Query(ctx context.Context, req *CommandRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}

func RegisterRedimintServer(s *grpc.Server, srv RedimintServer) {
	s.RegisterService(&_Redimint_serviceDesc, srv)
}

func _Redimint_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedimintServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redimint/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedimintServer).Query(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Redimint_serviceDesc = grpc.ServiceDesc{
	ServiceName: "redimint",
	HandlerType: (*RedimintServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _Redimint_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc_serivce.proto",
}
